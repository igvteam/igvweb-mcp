// generated from src/tools.yaml
export default "- name: genome\n  description: |\n    \n    Loads a genome by its identifier or path.\n    \n    Use this tool when you need to:\n    - Change the reference genome for your analysis\n    - Load a custom genome not included in the default IGV list\n    - Switch between different species' genomes\n    - Prepare IGV for loading data aligned to a specific genome build\n    - Load genomes from local files or remote URLs\n    \n    Note: Loading a new genome will unload all currently loaded data tracks.\n\n  arguments:\n    - name: idOrPath\n      description: |\n        The identifier (ID) of the genome to load, or a path.  In most cases the id is the UCSC name (e.g., hg19, hg38, mm10).\n        Custom genomes can also be loaded by ID they have been added to the IGV genome list.  Alterrnatively, a genome \n        can be specified as local file path or URL to a genome json file, and indexed fasta file, or a two-bit file.\n        \n        \n        Common genome IDs: hg38, hg19, mm10, mm39, rn6, danRer11, dm6, ce11, sacCer3\n\n- name: loadTrack\n  description: |\n    Loads a track file from a URL or a File Blob.  Note that IGV supports https://, http://, and gs:// protocols.  IGV does\n    not support ftp:// protocol\n    \n    Use this tool when you need to:\n    - Load BAM or CRAM files to view aligned sequencing reads\n    - Load VCF files to examine variant calls\n    - Load BED files to view genomic regions or features\n    - Load BigWig files to view coverage or signal tracks\n    - Load multiple related files simultaneously\n    - Load files from remote URLs or cloud storage\n\n  Notes: Tracks can also be loaded into igv-web through its \"Track\" menu.  This differs\n    from the Desktop IGV, which has menus such as \"Load from Server\" and \"Load from Encode...\"\n    Instead, igv-web uses the more general \"Load Track\" command to load files from any URL.\n    The \"Load Track\" menu also contains sub-menus for loading from public track hubs and\n    other sources such as the ENCODE project.\n\n  arguments:\n    - name: url\n      description: |\n        URL to the file to load, or a File Blob. Supported formats include:\n          - Alignment: BAM, SAM, CRAM\n          - Variant: VCF, VCF.gz\n          - Annotation: BED, GFF, GTF, BigBed, BigGenePred\n          - Coverage: BigWig, TDF, WIG\n          - Interaction: Interact, BigInteract, BEDPE\n          - Generic: IGV\n          - Copy Number: SEG, GISTIC\n          - Session: XML (IGV session files)\n        \n        Multiple files can be loaded in one command by separating paths with commas.\n        Note: A good source of track files are the IGV track hubs at https://github.com/igvteam/igv-data/tree/main/genomes/hubs.\n          these are organized by genome and contain UCSC track hub.txt files listing multiple tracks.  Another source\n          of track hubs is the UCSC genome browser public hubs at https://genome.ucsc.edu/cgi-bin/hgHubConnect.\n\n\n    - name: indexURL\n      description: A file path or URL to an index.  Required for some file types (e.g., BAM, CRAM)\n        Tabix index files (.tbi) are supported and used for VCF.gz files; .bai or .crai files are used for BAM/CRAM files.\n\n      optional: true\n\n- name: loadSession\n  description: |\n    Loads a igv.js session json file (recommended) or an IGV desktop session xml file from a URL.\n    \n    Note that IGV supports https://, http://, and gs:// protocols.  IGV does not support ftp:// protocol\n    \n    Use this tool when you need to:\n    - Restore a previously saved IGV session\n\n  arguments:\n    - name: url\n      description: URL to the session file to load.  Can be either a json session file or an IGV desktop xml session file.\n\n\n- name: goto\n  description: |\n    Navigate to a specified genomic locus or loci. This can be a gene name, genomic range, or space delimited list.\n    \n    Use this tool when you need to:\n    - Navigate to a specific genomic position or region\n    - Jump to a gene of interest by name\n    - View a particular variant location\n    - Examine a region identified in analysis results\n    - Navigate to coordinates from a BED file or variant call\n    - View multiple regions simultaneously (split screen)\n    \n    Examples: \"chr1:65,289,335-65,309,335\", \"BRCA1\", \"chrX:1000000\"\n  \n\n  arguments:\n    - name: locus\n      description: |\n        The genomic location to navigate to. Can be specified in multiple formats:\n          - Single position: \"chr1:1000000\" or \"chr1:1,000,000\"\n          - Range: \"chr1:1000000-2000000\" or \"chr1:1,000,000-2,000,000\"\n          - Gene name: \"BRCA1\" (if gene annotations are loaded)\n          - Multiple loci (space-separated): \"chr1:100-200 chr2:300-400\"\n              Chromosome names should match the reference genome (e.g., \"chr1\" or \"1\").\n        Note: If locus argument is a single base, e.g. chr1:1000, IGV will center the view on that position and \n              zoom in to base level with a 40bp window.\n\n- name: zoomin\n  description: Zooms in the view by a factor of 2.\n\n- name: zoomout\n  description: Zooms out the view by a factor of 2.\n\n- name: setColor\n  description: |\n    Sets the primary display color for a track or all tracks\n\n  arguments:\n    - name: color\n      description: |\n        The color to set, specified in one of two formats:\n          - RGB format: \"R,G,B\" where each component is 0-255 (e.g., \"255,0,0\" for red)\n          - Hex format: \"RRGGBB\" in hexadecimal (e.g., \"FF0000\" for red)\n    - name: trackName\n      description: The name of the track to set the color for. The name is the file name by default.\n        This is optional; if not provided, the color will be set for all tracks.\n      optional: true\n\n\n# Tools below this line are Desktop tools not yet supported in igv-web\n\n\n\n- name: renameTrack\n  description: |\n    Renames a track.\n  arguments:\n    - name: currentName\n      description: |\n        The current name of the track.\n        NOTE: If the current name contains spaces, replace them with %20.\n    - name: newName\n      description: |\n        The new name for the track.\n        NOTE: If the new name contains spaces, replace them with %20.\n\n- name: collapse\n  description: |\n    Collapse the track to a compact representation.  Annotation tracks will be collapsed to a single line.\n    Not all track types support collapsing; for those that do not, this command will have no effect.\n  \n\n  arguments:\n    - name: trackName\n      description: The name of the track to collapse. The name is the file name by default.  This is optional; if not\n        provided, all tracks will be collapsed.\n      optional: true\n\n- name: squish\n  description: |\n    Squish the track by reducing the height of each row.\n    Not all track types support squishing; for those that do not, this command will have no effect.\n\n  arguments:\n    - name: trackName\n      description: The name of the track to squish. The name is the file name by default.  This is optional; if not\n        provided, all tracks will be squished.\n      optional: true\n\n- name: expand\n  description: |\n    Expand the track by increasing the height of each row.\n    Not all track types support expanding; for those that do not, this command will have no effect.\n\n  arguments:\n    - name: trackName\n      description: The name of the track to expand. The name is the file name by default.  This is optional; if not\n        provided, all tracks will be expanded.\n      optional: true\n\n- name: region\n  description: |\n    Defines a region of interest bounded by two genomic positions.\n    \n    This command marks a specific genomic region as a \"region of interest\" in IGV.\n    The region will be highlighted with a red bar under the genome ruler. \n\n  arguments:\n    - name: chromosome\n      description: Chromosome name\n    - name: start\n      description: Start position\n    - name: end\n      description: End position\n\n- name: renameTrack\n  description: |\n    Renames a track.\n\n  arguments:\n    - name: currentName\n      description: |\n        The current name of the track.\n        NOTE: If the current name contains spaces, replace them with %20.\n    - name: newName\n      description: |\n        The new name for the track.\n        NOTE: If the new name contains spaces, replace them with %20.\n\n- name: group\n  description: |\n    Groups and organizes alignment reads by various properties.\n    \n    This command organizes how reads are displayed in alignment tracks by grouping them\n    according to different properties. Grouped reads are visually separated, making it\n    easier to identify patterns and anomalies. Different grouping options are useful\n    for different types of analysis.\n    \n    Use this tool when you need to:\n      - Visualize strand-specific patterns in strand-seq data\n      - Identify chimeric or aberrant read pairs by PAIR_ORIENTATION\n      - Separate reads from different samples in a multiplexed BAM\n      - Analyze phase information in phased sequencing data\n      - Examine base-specific patterns at a particular position\n      - Group reads by custom SAM tags for specialized analysis\n\n  arguments:\n    - name: attribute\n      description: Alignment attribute to group by.\n      enumValues:\n        - value: ALIGNED_READ_LENGTH\n          description: Group by aligned read length\n        - value: BASE\n          description: Group by base at a position (requires tag_name_or_position)\n        - value: INSERTION\n          description: Group by insertion at position (requires tag_name_or_position)\n        - value: FIRST_OF_PAIR_STRAND\n          description: Group by strand of first read in pair\n        - value: HAPLOTYPE\n          description: Group by haplotype\n        - value: LIBRARY\n          description: Group by sequencing library\n        - value: MATE_CHROMOSOME\n          description: Group by mate chromosome\n        - value: MOVIE\n          description: Group by movie (PacBio)\n        - value: NONE\n          description: Remove grouping\n        - value: PAIR_ORIENTATION\n          description: Group by pair orientation (e.g., F1R2, F2R1)\n        - value: PHASE\n          description: Group by phase\n        - value: READ_GROUP\n          description: Group by read group\n        - value: READ_ORDER\n          description: Group by read order\n        - value: REFERENCE_CONCORDANCE\n          description: Group by reference concordance\n        - value: SAMPLE\n          description: Group by sample name\n        - value: STRAND\n          description: Group by read strand\n        - value: SUPPLEMENTARY\n          description: Group by supplementary alignment status\n        - value: TAG\n          description: Group by SAM tag value (requires tag_name_or_position)\n        - value: ZMW\n          description: Group by ZMW (PacBio)\n    - name: tag\n      description: Tag name\n      optional: true\n\n- name: sort\n  description: |\n    Sorts reads in alignment tracks or features in segmented copy number tracks.\n    \n    This command reorganizes how reads or segments are displayed by sorting them according\n    to various criteria. Sorting can reveal patterns that aren't visible in the default\n    order, such as clustering of mismatches, strand biases, or structural variants.\n    Different sort options are useful for different types of analysis.\n\n  arguments:\n    - name: attribute\n      description: Alignment attribute to sort by.\n      enumValues:\n        - value: BASE\n          description: Sort by base at a position. Requires position\n        - value: FIRSTOFPAIRSTRAND\n          description: Sort by first-of-pair strand\n        - value: INSERTSIZE\n          description: Sort by insert size\n        - value: MATECHR\n          description: Sort by mate chromosome\n        - value: POSITION\n          description: Sort by alignment start position\n        - value: QUALITY\n          description: Sort by mapping quality\n        - value: READGROUP\n          description: Sort by read group\n        - value: READORDER\n          description: Sort by read order (as in file)\n        - value: READNAME\n          description: Sort by read name\n        - value: SAMPLE\n          description: Sort by sample\n        - value: STRAND\n          description: Sort by read strand\n        - value: ALIGNEDREADLENGTH\n          description: Sort by aligned read length\n        - value: AMPLIFICATION\n          description: Sort by amplification level\n        - value: DELETION\n          description: Sort by deletion level\n    - name: locus\n      description: |\n        Optional locus for position-based sorting. Format:\n          - For alignments: \"chr:position\" (single position)\n          - For copy number: \"chr:start-end\" (range)\n        If omitted, uses the center of the current view for alignments\n        or the entire view for copy number segments.\n      optional: true\n    - name: direction\n      description: |\n        direction: Optional sort direction:\n          - \"reverse\": Reverse the sort order\n          - If omitted: Standard ascending/descending order\n          Note: If direction is specified, locus must also be specified.\n\n- name: viewAsPairs\n  description: |\n    This command sets or unsets the \"view as pairs\" mode for alignment tracks in IGV.\n    When enabled, paired-end reads are displayed together as connected pairs,\n    making it easier to visualize their relationships and orientations.\n    \n    Use this tool when you need to:\n    - Visualize paired-end relationships in BAM files\n    - Identify discordant read pairs that may indicate structural variants\n    - Detect insertions, deletions, or rearrangements\n    - Analyze mate-pair or paired-end sequencing data\n    - Investigate abnormal insert sizes or orientations\n    - Verify proper pairing of reads in quality control\n  arguments:\n    - name: viewAsPairs\n      description: Whether to enable \"view as pairs\" mode.\n      enumValues:\n        - value: \"True\"\n          description: Enable view as pairs\n        - value: \"False\"\n          description: Disable view as pairs\n\n- name: snapshot\n  description: |\n    Captures a snapshot image of the current IGV view.\n    \n    This command saves the current IGV view as an image file. You can specify a filename or let\n    IGV generate one automatically based on the current locus. The file format is\n    determined by the filename extension (.png or .svg).  \n    \n    Note: Set snapshot_directory first to control where images are saved. Set\n    max_panel_height to control how much vertical space is captured. The view should\n    be fully rendered before taking a snapshot (consider using set_sleep_interval).\n\n  arguments:\n    - name: filename\n      description: The name of the file to save the snapshot to. If not provided, a default name\n        based on the current locus will be used.\n      optional: true\n\n\n- name: snapshotDirectory\n  description: |\n    This command specifies the directory path where IGV will save images created with\n    the snapshot command. This must be set before taking snapshots if you want them\n    saved to a specific location. If not set, IGV uses a default location which may\n    vary by platform.\n  arguments:\n    - name: directoryPath\n      description: The path to the directory where snapshots will be saved.\n\n- name: maxPanelHeight\n  description: |\n    This command sets the maximum height (in pixels) for each track panel when\n    capturing snapshots in IGV. This helps control the vertical size of the\n    resulting image, especially when many tracks are loaded.\n    \n    Use this tool when you need to:\n    - Limit the height of individual track panels in snapshot images\n    - Prevent excessively tall images when many tracks are displayed\n    - Ensure consistent image dimensions for presentations or publications\n    - Match snapshot output to screen view exactly (height=-1)\n\n  arguments:\n    - name: height\n      type: integer\n      description: The maximum height in pixels for each track panel in snapshots.\n\n- name: setSequenceStrand\n  description: |\n    Sets which DNA strand to display in the sequence track.\n    \n    This command controls whether the positive (forward) or negative (reverse) strand\n    sequence is displayed in IGV's sequence track. This affects the nucleotide sequence\n    shown and, if enabled, the 3-frame translation. Note that this changes which strand's\n    sequence is shown but does not reverse the left-to-right direction of the display.\n    \n    Use this tool when you need to:\n      - View the sequence of genes on the negative strand\n      - Verify reverse complement sequences for primers or probes\n    \n    Note: This changes which strand's sequence is displayed but maintains the left-to-right\n    genomic coordinate direction. The negative strand will show the reverse complement.\n\n  arguments:\n    - name: strand\n      description: The strand to set for the sequence track.\n      enumValues:\n        - value: \"+\"\n          description: Positive strand\n        - value: \"-\"\n          description: Negative strand\n\n- name: setSequenceShowTranslation\n  description: |\n    This command enables the display of amino acid translations in the sequence track.\n    When enabled, IGV shows the 3-frame translation of the DNA sequence, displaying the\n    amino acids that would be produced in each reading frame. This is useful for identifying\n    open reading frames, verifying coding sequences, and analyzing the impact of variants\n    on protein sequence.\n    \n    Use this tool when you need to:\n    - Identify open reading frames (ORFs) in genomic sequence\n    - Analyze the effect of variants on amino acid sequence\n    - Find potential start and stop codons\n    - Examine frameshift mutations and their consequences\n    - Validate gene annotations by checking translation\n    \n    Note: The translation shown depends on the current strand setting (set with\n    set_sequence_strand). You must be zoomed in sufficiently to see sequence details.\n\n  arguments:\n    - name: showTranslation\n      description: Whether to show the 3-frame translation in the sequence track.\n      enumValues:\n        - value: \"True\"\n          description: Show translation\n        - value: \"False\"\n          description: Hide translation\n\n- name: overlay\n  description: |\n    This command overlays two or more wig tracks. The tracks are distinguished by color.\n    Alpha shading is used to allow visualization of overlapping values.\n    \n    Use this tool when you need to:\n    - Compare multiple signal tracks \n    - Save vertical space by combining tracks\n  arguments:\n    - name: overlayTrackName\n      description: The name of the new combined overlay track.\n    - name: trackNames\n      description: |\n        A space separated list of the names of the tracks to overlay.  The names are the file names by default.\n        \n        Note: All tracks must of type wiggle (BigWig, TDF, WIG, BEDGRAPH).\n        Note: Spaces in track names must be replaced with %20\n\n- name: separate\n  description: |\n    This command separates an overlaid wig track into its component tracks.\n    \n    Use this tool when you need to:\n    - Restore individual wig tracks from an overlay\n  arguments:\n    - name: overlayTrackName\n      description: The name of the overlay track to separate.\n\n- name: new\n  description: |\n    This command resets IGV to a clean state by unloading all data tracks, similar to\n    starting IGV fresh. The default genome annotations (genes, etc.) are retained, but\n    all user-loaded tracks are removed. This is useful\n    for starting a new analysis or clearing out old data before loading new files.\n    \n    Use this tool when you need to:\n    - Start a fresh analysis without restarting IGV\n    - Clear all loaded data tracks to free memory\n    - Reset the view before loading a new set of files\n    - Clean up between batch processing jobs\n    - Remove all tracks while keeping the same reference genome\n\n\n- name: saveSession\n  description: |\n    This command saves all aspects of the current IGV session including loaded tracks, their display settings, the \n    current genome, and visible region.  The session file (XML format) can be loaded later to restore the exact state.\n    \n    Use this tool when you need to:\n    - Save your work for later continuation\n    - Create reproducible analysis configurations\n    - Share IGV setups with collaborators\n    - Document the exact state of an analysis for publications\n    - Create template sessions for batch processing\n    - Backup current work before making major changes\n\n    Note: Session files contain paths to data files, not the data itself. Ensure\n    data files remain accessible at their original locations when loading the session.\n\n  arguments:\n    - name: filename\n      description: |\n        The path where the session file should be saved. It is strongly recommended to use a full absolute path. \n        The file will be saved in XML format with a .xml extension (add .xml if not included).\n        \n        Example: \"/full/path/to/my_session.xml\"\n\n- name: collapse\n  description: |\n    Collapse the track to a compact representation.  Annotation tracks will be collapsed to a single line.\n    Not all track types support collapsing; for those that do not, this command will have no effect.\n\n\n  arguments:\n    - name: trackName\n      description: The name of the track to collapse. The name is the file name by default.  This is optional; if not\n        provided, all tracks will be collapsed.\n      optional: true\n\n- name: squish\n  description: |\n    Squish the track by reducing the height of each row.\n    Not all track types support squishing; for those that do not, this command will have no effect.\n\n  arguments:\n    - name: trackName\n      description: The name of the track to squish. The name is the file name by default.  This is optional; if not\n        provided, all tracks will be squished.\n      optional: true\n\n- name: expand\n  description: |\n    Expand the track by increasing the height of each row.\n    Not all track types support expanding; for those that do not, this command will have no effect.\n\n  arguments:\n    - name: trackName\n      description: The name of the track to expand. The name is the file name by default.  This is optional; if not\n        provided, all tracks will be expanded.\n      optional: true\n\n- name: region\n  description: |\n    Defines a region of interest bounded by two genomic positions.\n\n    This command marks a specific genomic region as a \"region of interest\" in IGV.\n    The region will be highlighted with a red bar under the genome ruler. \n\n  arguments:\n    - name: chromosome\n      description: Chromosome name\n    - name: start\n      description: Start position\n    - name: end\n      description: End position\n\n\n- name: group\n  description: |\n    Groups and organizes alignment reads by various properties.\n\n    This command organizes how reads are displayed in alignment tracks by grouping them\n    according to different properties. Grouped reads are visually separated, making it\n    easier to identify patterns and anomalies. Different grouping options are useful\n    for different types of analysis.\n    \n    Use this tool when you need to:\n      - Visualize strand-specific patterns in strand-seq data\n      - Identify chimeric or aberrant read pairs by PAIR_ORIENTATION\n      - Separate reads from different samples in a multiplexed BAM\n      - Analyze phase information in phased sequencing data\n      - Examine base-specific patterns at a particular position\n      - Group reads by custom SAM tags for specialized analysis\n\n  arguments:\n    - name: attribute\n      description: Alignment attribute to group by.\n      enumValues:\n        - value: ALIGNED_READ_LENGTH\n          description: Group by aligned read length\n        - value: BASE\n          description: Group by base at a position (requires tag_name_or_position)\n        - value: INSERTION\n          description: Group by insertion at position (requires tag_name_or_position)\n        - value: FIRST_OF_PAIR_STRAND\n          description: Group by strand of first read in pair\n        - value: HAPLOTYPE\n          description: Group by haplotype\n        - value: LIBRARY\n          description: Group by sequencing library\n        - value: MATE_CHROMOSOME\n          description: Group by mate chromosome\n        - value: MOVIE\n          description: Group by movie (PacBio)\n        - value: NONE\n          description: Remove grouping\n        - value: PAIR_ORIENTATION\n          description: Group by pair orientation (e.g., F1R2, F2R1)\n        - value: PHASE\n          description: Group by phase\n        - value: READ_GROUP\n          description: Group by read group\n        - value: READ_ORDER\n          description: Group by read order\n        - value: REFERENCE_CONCORDANCE\n          description: Group by reference concordance\n        - value: SAMPLE\n          description: Group by sample name\n        - value: STRAND\n          description: Group by read strand\n        - value: SUPPLEMENTARY\n          description: Group by supplementary alignment status\n        - value: TAG\n          description: Group by SAM tag value (requires tag_name_or_position)\n        - value: ZMW\n          description: Group by ZMW (PacBio)\n    - name: tag\n      description: Tag name\n      optional: true\n\n- name: sort\n  description: |\n    Sorts reads in alignment tracks or features in segmented copy number tracks.\n\n    This command reorganizes how reads or segments are displayed by sorting them according\n    to various criteria. Sorting can reveal patterns that aren't visible in the default\n    order, such as clustering of mismatches, strand biases, or structural variants.\n    Different sort options are useful for different types of analysis.\n\n  arguments:\n    - name: attribute\n      description: Alignment attribute to sort by.\n      enumValues:\n        - value: BASE\n          description: Sort by base at a position. Requires position\n        - value: FIRSTOFPAIRSTRAND\n          description: Sort by first-of-pair strand\n        - value: INSERTSIZE\n          description: Sort by insert size\n        - value: MATECHR\n          description: Sort by mate chromosome\n        - value: POSITION\n          description: Sort by alignment start position\n        - value: QUALITY\n          description: Sort by mapping quality\n        - value: READGROUP\n          description: Sort by read group\n        - value: READORDER\n          description: Sort by read order (as in file)\n        - value: READNAME\n          description: Sort by read name\n        - value: SAMPLE\n          description: Sort by sample\n        - value: STRAND\n          description: Sort by read strand\n        - value: ALIGNEDREADLENGTH\n          description: Sort by aligned read length\n        - value: AMPLIFICATION\n          description: Sort by amplification level\n        - value: DELETION\n          description: Sort by deletion level\n    - name: locus\n      description: |\n        Optional locus for position-based sorting. Format:\n          - For alignments: \"chr:position\" (single position)\n          - For copy number: \"chr:start-end\" (range)\n        If omitted, uses the center of the current view for alignments\n        or the entire view for copy number segments.\n      optional: true\n    - name: direction\n      description: |\n        direction: Optional sort direction:\n          - \"reverse\": Reverse the sort order\n          - If omitted: Standard ascending/descending order\n          Note: If direction is specified, locus must also be specified.\n\n- name: viewAsPairs\n  description: |\n    This command sets or unsets the \"view as pairs\" mode for alignment tracks in IGV.\n    When enabled, paired-end reads are displayed together as connected pairs,\n    making it easier to visualize their relationships and orientations.\n    \n    Use this tool when you need to:\n    - Visualize paired-end relationships in BAM files\n    - Identify discordant read pairs that may indicate structural variants\n    - Detect insertions, deletions, or rearrangements\n    - Analyze mate-pair or paired-end sequencing data\n    - Investigate abnormal insert sizes or orientations\n    - Verify proper pairing of reads in quality control\n  arguments:\n    - name: viewAsPairs\n      description: Whether to enable \"view as pairs\" mode.\n      enumValues:\n        - value: \"True\"\n          description: Enable view as pairs\n        - value: \"False\"\n          description: Disable view as pairs\n\n- name: snapshot\n  description: |\n    Captures a snapshot image of the current IGV view.\n    \n    This command saves the current IGV view as an image file. You can specify a filename or let\n    IGV generate one automatically based on the current locus. The file format is\n    determined by the filename extension (.png or .svg).  \n    \n    Note: Set snapshot_directory first to control where images are saved. Set\n    max_panel_height to control how much vertical space is captured. The view should\n    be fully rendered before taking a snapshot (consider using set_sleep_interval).\n\n  arguments:\n    - name: filename\n      description: The name of the file to save the snapshot to. If not provided, a default name\n        based on the current locus will be used.\n      optional: true\n\n\n- name: snapshotDirectory\n  description: |\n    This command specifies the directory path where IGV will save images created with\n    the snapshot command. This must be set before taking snapshots if you want them\n    saved to a specific location. If not set, IGV uses a default location which may\n    vary by platform.\n  arguments:\n    - name: directoryPath\n      description: The path to the directory where snapshots will be saved.\n\n- name: maxPanelHeight\n  description: |\n    This command sets the maximum height (in pixels) for each track panel when\n    capturing snapshots in IGV. This helps control the vertical size of the\n    resulting image, especially when many tracks are loaded.\n    \n    Use this tool when you need to:\n    - Limit the height of individual track panels in snapshot images\n    - Prevent excessively tall images when many tracks are displayed\n    - Ensure consistent image dimensions for presentations or publications\n    - Match snapshot output to screen view exactly (height=-1)\n\n  arguments:\n    - name: height\n      type: Number\n      description: The maximum height in pixels for each track panel in snapshots.\n\n- name: setSequenceStrand\n  description: |\n    Sets which DNA strand to display in the sequence track.\n\n    This command controls whether the positive (forward) or negative (reverse) strand\n    sequence is displayed in IGV's sequence track. This affects the nucleotide sequence\n    shown and, if enabled, the 3-frame translation. Note that this changes which strand's\n    sequence is shown but does not reverse the left-to-right direction of the display.\n    \n    Use this tool when you need to:\n      - View the sequence of genes on the negative strand\n      - Verify reverse complement sequences for primers or probes\n    \n    Note: This changes which strand's sequence is displayed but maintains the left-to-right\n    genomic coordinate direction. The negative strand will show the reverse complement.\n\n  arguments:\n    - name: strand\n      description: The strand to set for the sequence track.\n      enumValues:\n        - value: \"+\"\n          description: Positive strand\n        - value: \"-\"\n          description: Negative strand\n\n- name: setSequenceShowTranslation\n  description: |\n    This command enables the display of amino acid translations in the sequence track.\n    When enabled, IGV shows the 3-frame translation of the DNA sequence, displaying the\n    amino acids that would be produced in each reading frame. This is useful for identifying\n    open reading frames, verifying coding sequences, and analyzing the impact of variants\n    on protein sequence.\n    \n    Use this tool when you need to:\n    - Identify open reading frames (ORFs) in genomic sequence\n    - Analyze the effect of variants on amino acid sequence\n    - Find potential start and stop codons\n    - Examine frameshift mutations and their consequences\n    - Validate gene annotations by checking translation\n\n    Note: The translation shown depends on the current strand setting (set with\n    set_sequence_strand). You must be zoomed in sufficiently to see sequence details.\n\n  arguments:\n    - name: showTranslation\n      description: Whether to show the 3-frame translation in the sequence track.\n      enumValues:\n        - value: \"True\"\n          description: Show translation\n        - value: \"False\"\n          description: Hide translation\n\n- name: overlay\n  description: |\n    This command overlays two or more wig tracks. The tracks are distinguished by color.\n    Alpha shading is used to allow visualization of overlapping values.\n\n    Use this tool when you need to:\n    - Compare multiple signal tracks \n    - Save vertical space by combining tracks\n  arguments:\n    - name: overlayTrackName\n      description: The name of the new combined overlay track.\n    - name: trackNames\n      description: |\n        A space separated list of the names of the tracks to overlay.  The names are the file names by default.\n        \n        Note: All tracks must of type wiggle (BigWig, TDF, WIG, BEDGRAPH).\n        Note: Spaces in track names must be replaced with %20\n\n- name: separate\n  description: |\n    This command separates an overlaid wig track into its component tracks.\n\n    Use this tool when you need to:\n    - Restore individual wig tracks from an overlay\n  arguments:\n    - name: overlayTrackName\n      description: The name of the overlay track to separate.\n"
